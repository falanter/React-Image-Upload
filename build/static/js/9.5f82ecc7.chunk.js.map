{"version":3,"sources":["components/Uploader.js","pages/Home.js"],"names":["Dragger","Upload","Result","styled","div","H1","h1","Image","img","Component","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalStore","width","setWidth","widthStr","height","setHeight","heightStr","fullStr","serverFile","attributes","url","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","window","test","type","size","error","upload","then","success","catch","useEffect","tip","spinning","isUpoading","className","InboxOutlined","target","rel","href","filename","src","ref","onChange","current","value","placeholder","StyleUploader","Hr","hr","Home","username","Uploader"],"mappings":"mPAOQA,EAAYC,IAAZD,QAGFE,EAASC,IAAOC,IAAV,+FAKNC,EAAKF,IAAOG,GAAV,sEAIFC,EAAQJ,IAAOK,IAAV,iDAuHIC,EAjHGC,aAAS,WACzB,MAAkCC,cAA1BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UACdC,EAAOC,mBACPC,EAAOD,mBAEPE,EAAQC,aAAc,iBAAO,CACjCC,MAAO,KACPC,SAFiC,SAExBD,GACPF,EAAME,MAAQA,GAEZE,eACF,OAAOJ,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAE7CG,OAAQ,KACRC,UATiC,SASvBD,GACRL,EAAMK,OAASA,GAEbE,gBACF,OAAOP,EAAMK,OAAN,aAAqBL,EAAMK,QAAW,IAE3CG,cAEF,OAAOb,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,IAAM,gBAAkBX,EAAMI,SAAWJ,EAAMO,eAepGK,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAAAC,GAGZ,OAFApB,EAAWqB,QAAQD,GACnBpB,EAAWsB,YAAYF,EAAKG,MACE,OAA1BtB,EAAUuB,aACZC,IAAQC,QAAQ,qDACT,IAETC,OAAOP,KAAOA,EACT,wCAAwCQ,KAAKR,EAAKS,MAInDT,EAAKU,KAAO,SACdL,IAAQM,MAAM,+BACP,IAGT/B,EAAWgC,SACRC,MAAK,SAACnB,GAGLW,IAAQS,QAAQ,+BACfC,OAAM,WAEPV,IAAQC,QAAQ,gCAEb,IAjBLD,IAAQM,MAAM,0EACP,MAyBb,OANAK,qBAAU,WACJnC,EAAUuB,aACZC,IAAQC,QAAQ,oCAEjB,IAGD,gCACE,cAAC,IAAD,CAAMW,IAAI,qBAAMC,SAAUtC,EAAWuC,WAArC,SACE,eAACnD,EAAD,2BAAa6B,GAAb,cACE,mBAAGuB,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,0EACA,mBAAGA,UAAU,kBAAb,uHAMFxC,EAAWc,WAAa,eAACxB,EAAD,WACtB,cAACG,EAAD,uCACA,+BACE,0DACA,6BAAI,mBAAGiD,OAAO,SAASC,IAAI,aAAaC,KAAM5C,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,IAA1F,SAAgGhB,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,QACpJ,oDACA,6BAAKhB,EAAW6C,WAChB,0DACA,6BACE,cAAClD,EAAD,CAAOmD,IAAK9C,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,QAE9D,0DACA,+BACE,uBAAO+B,IAAK7C,EAAM8C,SA1EN,WAGtB3C,EAAMG,SAASN,EAAK+C,QAAQC,QAuE2BC,YAAY,qDACzD,uBAAOJ,IAAK3C,EAAM4C,SArEL,WACvB3C,EAAMM,UAAUP,EAAK6C,QAAQC,QAoE2BC,YAAY,wDAE5D,6BACE,mBAAGT,OAAO,SAASC,IAAI,aAAaC,KAAMvC,EAAMQ,QAAhD,SAA0DR,EAAMQ,kBAG1D,WC/HduC,EAAgB7D,IAAOC,IAAV,oHAMb6D,EAAK9D,IAAO+D,GAAV,2EAKFC,EAAOzD,aAAS,WACpB,IAAQG,EAAcF,cAAdE,UAGR,OACE,qCACA,8CAEEA,EAAUuB,YAAc,8CACfvB,EAAUuB,YAAYT,WAAWyC,YACrC,gEAIP,cAACH,EAAD,IACA,cAACD,EAAD,UACE,cAACK,EAAD,YAMSF","file":"static/js/9.5f82ecc7.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useStores } from '../stores';\nimport { observer, useLocalStore } from 'mobx-react';\nimport { Upload, message, Spin } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nconst { Dragger } = Upload;\n\n\nconst Result = styled.div`\n  margin-top: 30px;\n  border: 1px dashed #ccc;\n  padding: 20px;\n`;\nconst H1 = styled.h1`\n  margin: 20px 0;\n  text-align: center;\n`;\nconst Image = styled.img`\n  max-width: 300px;\n`;\n\n\n\nconst Component = observer(() => {\n  const { ImageStore, UserStore } = useStores();\n  const ref1 = useRef();\n  const ref2 = useRef();\n\n  const store = useLocalStore(() => ({\n    width: null,\n    setWidth(width) {\n      store.width = width;\n    },\n    get widthStr() {\n      return store.width ? `/w/${store.width}` : '';\n    },\n    height: null,\n    setHeight(height) {\n      store.height = height;\n    },\n    get heightStr() {\n      return store.height ? `/h/${store.height}` : '';\n    },\n    get fullStr() {\n      //?imageView2/0/w/800/h/400)\n      return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\n    }\n\n  }));\n\n  const bindWidthChange = () => {\n    // console.log('bindWidthChange...')\n    // console.log(ref1.current.value)\n    store.setWidth(ref1.current.value);\n  };\n\n  const bindHeightChange = () => {\n    store.setHeight(ref2.current.value);\n  };\n\n  const props = {\n    showUploadList: false,\n    beforeUpload: file => {\n      ImageStore.setFile(file);\n      ImageStore.setFilename(file.name);\n      if (UserStore.currentUser === null) {\n        message.warning('请先登录再上传！');\n        return false;\n      }\n      window.file = file\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\n        message.error('只能上传png/svg/jpg/gif格式的图片');\n        return false;\n      }\n      if (file.size > 1024 * 1024) {\n        message.error('图片最大1M');\n        return false;\n      }\n\n      ImageStore.upload()\n        .then((serverFile) => {\n          // console.log('上传成功')\n          // console.log(serverFile);\n          message.success('上传成功');\n        }).catch(() => {\n          // console.log('上传失败')\n          message.warning('上传失败');\n        });\n      return false;\n    }\n  };\n  useEffect(() => {\n    if(!UserStore.currentUser){\n      message.warning('请先登录！');\n    }\n  }, []);// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <Spin tip=\"上传中\" spinning={ImageStore.isUpoading}>\n        <Dragger {...props}>\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\n          <p className=\"ant-upload-hint\">\n            仅支持.png/.gif/.jpg/.svg格式的图片，图片最大1M\n          </p>\n        </Dragger>\n      </Spin>\n      {\n        ImageStore.serverFile ? <Result>\n          <H1>上传结果</H1>\n          <dl>\n            <dt>线上地址</dt>\n            <dd><a target=\"_blank\" rel=\"noreferrer\" href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a></dd>\n            <dt>文件名</dt>\n            <dd>{ImageStore.filename}</dd>\n            <dt>图片预览</dt>\n            <dd>\n              <Image src={ImageStore.serverFile.attributes.url.attributes.url} />\n            </dd>\n            <dt>更多尺寸</dt>\n            <dd>\n              <input ref={ref1} onChange={bindWidthChange} placeholder=\"最大宽度（可选）\" />\n              <input ref={ref2} onChange={bindHeightChange} placeholder=\"最大高度（可选）\" />\n            </dd>\n            <dd>\n              <a target=\"_blank\" rel=\"noreferrer\" href={store.fullStr}>{store.fullStr}</a>\n            </dd>\n          </dl>\n        </Result> : null\n      }\n    </div>\n  );\n});\nexport default Component;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { useStores } from '../stores';\r\nimport Uploader from '../components/Uploader';\r\nimport styled from 'styled-components';\r\n\r\nconst StyleUploader = styled.div`\r\n  margin-top: 30px;\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius:5px;\r\n`;\r\nconst Hr = styled.hr`\r\n  margin-top:10px;\r\n  border: 1px solid #eee;\r\n`;\r\n\r\nconst Home = observer(() => {\r\n  const { UserStore } = useStores();\r\n  // console.log('home', UserStore)\r\n  // const User = () => <div>Hello {UserStore.currentUser.attribures.username} </div>\r\n  return (\r\n    <>\r\n    <h1>Image Upload</h1>\r\n    {\r\n      UserStore.currentUser ? <>\r\n        Hello {UserStore.currentUser.attributes.username} \r\n      </> :<>\r\n      请先登录\r\n      </>\r\n    } \r\n    <Hr />\r\n    <StyleUploader>\r\n      <Uploader />\r\n    </StyleUploader>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Home;"],"sourceRoot":""}